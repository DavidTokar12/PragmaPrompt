from __future__ import annotations

import prompt_craft_kit as pck

from tests.review import Review
from tests.review import ReviewResult


"""
# You are a unit test reviewer

- The tests target the `prompt_craft_kit` Python package, a utility framework for composing robust prompts as Python code.
- Your job is to review the **formatting and structure** of the prompts this package generates.
"""

pck.warning(body="Optimize for LLM readability over human readability.")

"""
## What “readability” means for LLMs
"""

pck.kv(
    items=[
        (
            "whitespace",
            "LLMs do not rely on visual layout. Excess whitespace adds little value. Prefer explicit structure using XML-like tags or Markdown section headers; represent data as compact, well-formed JSON.",
        ),
        (
            "conciseness",
            "Keep overhead minimal; token cost is proportional to input size.",
        ),
        (
            "consistency",
            "Use consistent formatting conventions across components (headings, delimiters, key order, and JSON shapes).",
        ),
    ]
)

pck.warning(
    body=(
        "Do not critique the **content** itself. That text is generated by another LLM. "
        "Your responsibility is to assess the **formatting and structure** produced by this package."
    )
)

output = Review(
    result=ReviewResult.PASS,
    reasoning=(
        "Explain succinctly why the prompt passes or where it could improve. "
        "Focus on structure: sectioning, delimiters, JSON correctness, consistency, and token efficiency. "
        "Conclude with why the selected rating is justified."
    ),
    formatting_rating=5,
)

pck.output_format(data=output)

# If re:
# ""
